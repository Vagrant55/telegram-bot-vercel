export default async function handler(req, res) {
  if (req.method !== 'POST') {
    return res.status(405).json({ error: 'Method Not Allowed' });
  }

  const { message } = req.body;
  if (!message || !message.text) return res.status(200).json({ ok: true });

  const chatId = message.chat.id;
  const text = message.text;
  const firstName = message.from.first_name || "–ê–Ω–æ–Ω–∏–º";

  const TOKEN = "7991590846:AAHp6H7VW_dPhH3tf_zAjTj8aQSCYZcm6iU";
  const ADMIN_CHAT_ID = 935264202;

  // –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
  const sendText = async (toChatId, msg) => {
    const url = `https://api.telegram.org/bot${TOKEN}/sendMessage?chat_id=${toChatId}&text=${encodeURIComponent(msg)}`;
    try {
      await fetch(url);
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:", error);
    }
  };

  // –ö–æ–º–∞–Ω–¥–∞ /start
  if (text === "/start") {
    await sendText(chatId, `‚úÖ –ü—Ä–∏–≤–µ—Ç, ${firstName}! –¢—ã –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.`);
    await sendText(ADMIN_CHAT_ID, `üì• –ù–æ–≤—ã–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫: ${firstName} (${chatId})`);
    return res.status(200).json({ ok: true });
  }

  // –ö–æ–º–∞–Ω–¥–∞ /send (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞)
  if (chatId == ADMIN_CHAT_ID && text.startsWith("/send ")) {
    const broadcastText = text.replace("/send ", "");
    await sendText(ADMIN_CHAT_ID, `üì§ –†–∞—Å—Å—ã–ª–∫–∞: "${broadcastText}" ‚Äî –ø–æ–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤–∞–º.`);
    return res.status(200).json({ ok: true });
  }

  res.status(200).json({ ok: true });
}
